Practice readibility and simplicity. Include description and documentation for others to read and make changes to it

**IS:   

        summery box shadow and expand/collapse (fast)animation.
        Move `Show on SkyVector Map` to the right end and grey it out a tiny bit and decrease font.
        
        Workout 401 forbidden error; CSFR token issues on main web.
        **understand JavaScript <script> tag** and how its implemented with views.py and urls.py
            Implement asynchronous loading of the data on the flight_deet page.
                Load data incrementally so as to avoid waiting for all data to be fetched.
        Explore vim manoeuvers
    
        
**UV:   
        learn about multiprocessing vs multithreading and implement on flight_deet
        prepare search query logic for disecting
        fix massive bug on flight_aware route date time conflict with real scheduled_time.
            currently it senses the most recent route that is not None type probs giving future date
            use: if scheduled_out is current_utc and route is not none:
                but current utc date_time has source latency.   
        Extract all airports D-Atis info during all wewather conditinos for analyses and classification
            Add thunderstorm, freezing and such symbols on title.
            Add departure/approach runways in use.
        integrate EDCT info  from https://www.fly.faa.gov/edct/jsp/edctLookUp.jsp
        Remove sql database and create own for seamless lightweight version.
        Fix bug that takes in 2 flight routes for singular flight number.
            Add option to scroll left and right for dates. 
        Implement asynchronous loading of the data on the flight_deet page.
            Load data incrementally so as to avoid waiting for all data to be fetched.
        consolidate menu pages within the Menu_page class in views.py
        Fix up weather page and include ability to pull multiple airports

        App:
            swift language
            with search capability such that most frequest searches are stored for quick access.
            search bar:
            Implement search bar suggestions as user initiates typing.
        
        add Notams for departure and destinations.
        
        Scrape `scheduled` times less frequently as it is mostly static and expensive.
            Scraper scrapes overnight when its not necessary. Avoid those.
        Only scrape `actual` times more frequently and from different web source to decrease intensive pull.
        
        group search queries.

        Make search availabe such that the initial switches are disregarded.
            analyse flight numbers, and gates such that '3' or '4' gives direct search instead of `i` switch
                if flt# clashes with gates, seperate them in a function if those are queried.

        Have the ability to save queries made on the web such that they are unique.
        Currently its such  that too many similar quires are getting cluttered in the /admin page.

        Gotta be able to get the route from the web.

        fix freeze bug on the EC2. After running lengthy scrape for a few days cmd seems to get stuck.
            Discard while loop instead use:use a task scheduling library like Celery with a task queue such as RabbitMQ or Redis to handle the scheduled tasks asynchronously.
            Utilize webhooks or event-driven architectures: Instead of pulling data in a loop, you can set up webhooks or use event-driven architectures to receive notifications or updates from the sources you want to scrape. This way, you can fetch data only when it becomes available or when an event is triggere.

        flight deet packet:
            Make a seperate expand/collapse section for NAS packet.
            Examine metar and TAF for parsing and color coding IFR and LIFR ceilings, Visibility, freezing conditions and runway condition codes.
            Highlight weather minimums in red for alternate requirements;(1-2-3 rule per ETA)
                1/2SM as pink and 1/4SM as black
            Highlight Icing conditions in blue; LIFR in pink 
            include gate in this packet of information
            include IFR routing through flight aware if able
            associate flight numbers in gates table to their dedicated information for departure, destination and weather
        
        build analytics for how a user navigates and where they spend most times, what they search.

        make use of http://xml.flightview.com/xmlbdom/ for pulling flight data instead of requests and bs4 libraries
        
        Use models and sql for database management.
        DONE! add activator() scrape to include data from few hours later since its currently only showing 6am, 12pm and 6pm.

        DONE! Include ground stop information.


IS Done!!:
        DONE! implement show and hide feature for departure and destination boxes on flight_deet page
        DONE! Make all pages in Menu bar symmetric.
        DONE! Make dark mode switch symmetric
        DONE! Make the flight deet page more like the google flight packet. search `i 492` to view the flight deet
        DONE! Use Dark mode across the web.
        DONE! Make seperate css for templates/dj_app/base.html instead of having it within the base.html. Its not a good practive to have styling within html. 

Note consistent irregularity in the outlaws - check for patterns.
    fix outlaws such that those patterns are overwritten and only unique patterns get updated in it. 

Use Flightaware API to extract clearance and route.

When User first accesses the web the date and time of the latest master should be displayed 

Add menu section:
    List all gates, 
    Analyses, statistics and misery map using delay graph.
        e.g: Kudos to gate C101 for most ontime departures. 
            Worst gate for delays(show sorted values)   

need to be able to receive alerts if the weather deteriorates:
    Account for any ground stop or delays there might be at any particular airport in the National Airspace System

add delay information and color code it

setup latest changes page. Include updates with dates and description. 
Fix Gate_Scrape Scrape uppercase. It is unusual.

Deploy the ability to chat. Store all queries with time stamp for later analyses.
    Compare and assess similar frequent queries, account for typo. 
    Take query and if return cannot be formulated let the client know:
        "Unable to process your search at this time.
        It has been added to our resolutions list for further attention with absolute dedication."
        **option** Add Feedback to go with it

add ability to see raw metar or simplified one with only pertinant information.

Big bug when extracting info from other sources. the data can be messy and unreiable. Create redundency

airport name, gate and flight # can be partial/absolute.
    Essentially a functionality to predict in dropdown in search similar to google - indexing.
    search should initiate right away for flight num, airport or gate

Add these query words and functionality to chat :
weather_range = ['met ', ' met', ' met ', 'met', 'taf ', ' taf', ' taf ', 'taf', 'weather', 'metar', 'metar ']

"{gate} for {partial/complete airport ID/name}" = "{gate} {airport}"
"{gate} for {partial/complete airport name}" = "{gate} {airport}"   
"weather for {partial/complete airport} = "{metar} {airport}"
"{flight number} weather" = "{metar} {departure airport} {destination airport}"
"{flight number} destination" = return destination or destination
"{flight number} not, notam, notams" = return notams for departure and destination. include ability to return just pertinant information.

        DONE! fix and cleanup description in examples on homepage.
        DONE! TAF can be out of index. remove TAF if unavailable. Redirect to no found page if no weather found.
                for example `w kcdw` returns error since index is out range probably because TAF is not available for it.
        Done! Major time issue fixes for pulling lengthy web scrape . 
        DONE! Fix date and time on `i` switch output
        Done! Fix exponentially destructive while loop in the Gate_Scrape_Thread within root_gate_checker.py
        DONE! Add all past queries in the web itself in a menu section so it is easily accessible.
        DONE! seperate TAF by "   " and replace it with new line to make it viewable.
        
        DONE! move reliable structured data operation into the scraper rather than dealing with in Gate_checker()
    	Done! Treat unreliable flights at source before it is dumped as master.pkl to keep master pikle clean.
                Account for reliable and unreliable outlaws at source rather than scheduled flights
        DONE! Move all template looking functions to root_class. 
            exec(), reliable flight_num, 
        DONE! set up linux AWS EC2
        DONE! main query is len 4 or 3 for flight number. Fix it
        DONE!! weather table should be the same as weather table on flight_deet.
            Searching `w kewr` to see just metar and taf vs search 414 to see how that table differs.
        DONE! Remove port 8000.
        DONE! SSL cert for https port.
        DONE! Make a `report` on homepage allowing for qick reporting of anomaly. probably the ability to send a screenshot. some sort of chat mechanism.
        DONE! FIXED AND MADE IT TO CENTER Move Departure times to the left most side and gate deets to the right most side of the title.
        DONE! come up with a better cleaner font across the web. Especially web title.
        DONE! Fix expand/collapse squaring on the flight_deet page and make it co:nsistent with box size.
        DONE!! Include departure and arrival times in zulu as well as the local timem in the flight deet page.
        DONE! Delay/GS from the faa.gov on the ground stop.
        DONE! google type flight_deet box
        DONE! Add skyvector map
